[project]
name = "pywaterflood"
version = "0.2.1-alpha.1"
description = "Physics-inspired waterflood performance modeling"
authors = [{name = "Frank Male", email ="frmale@utexas.edu"}]
license = {file = "LICENSE"}
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Hydrology",
]
requires-python = ">=3.7"
dependencies = [
    "numpy >=1.21",
    "scipy >=1.4",
    "pandas >=1.3.5",
    "openpyxl >=3.0.9",
    "joblib >=1.1.0",
    "numba >=0.55.1",
]

[project.optional-dependencies]
lint = [
    "black >=22",
    "flake8 >=4.0.1",
    "flake8-bugbear >=21.11.29",
    "flake8-builtins >=1.5.3",
    "flake8-comprehensions >=3.7.0",
    "flake8-string-format >=0.3.0",
    "darglint >=1.8",
    "mypy >=0.920",
    "pre-commit >=2.0",
    "pydocstyle >=6.1.1",
]
test = [
    "pytest >=6.2.5",
    "pytest-cov >=3.0.0",
    "tox >=3.24.4",
    "coverage[toml] >=6.3.3",
    "tox-gh-actions >=2.9.1",
]
docs = [
    "myst-nb",
    "sphinx",
    "sphinx-autoapi",
    "sphinx-rtd-theme",
]
devwork = [
    "jupyterlab",
    "seaborn",
]

[project.urls]
repository = "https://github.com/frank1010111/pywaterflood"
documentation = "https://pywaterflood.readthedocs.io"
"Bug Tracker" = "https://github.com/frank1010111/pywaterflood/issues"

[build-system]
requires = ["maturin>=0.13"]
build-backend = "maturin"

[tool.maturin]
# Include arbitrary files in the sdist
sdist-include = []
# Bindings type
bindings = "pyo3"
# Control the platform tag on linux
compatibility = "manylinux2014"

[tool.coverage.paths]
source = ["pywaterflood", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["pywaterflood"]

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
minversion = "6.0"
markers = [
    "slow: mark test as slow."
]

[tool.isort]
profile = "black"

[tool.black]
line-length = 99