[project]
name = "pywaterflood"
version = "0.3.0"
description = "Physics-inspired waterflood performance modeling"
authors = [{name = "Frank Male", email ="frmale@utexas.edu"}]
license = {file = "LICENSE"}
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Hydrology",
]
requires-python = ">=3.7"
dependencies = [
    "numpy >=1.21",
    "scipy >=1.4",
    "pandas >=1.3.5",
    "openpyxl >=3.0.9",
    "joblib >=1.1.0",
]

[project.optional-dependencies]
test = [
    "pytest >=6.2.5",
    "pytest-cov >=3.0.0",
    "coverage[toml] >=6.3.3",
]
docs = [
    "myst-nb",
    "sphinx",
    "sphinx-autoapi",
    "sphinx-rtd-theme",
]
devwork = [
    "ipykernel",
    "seaborn",
]

[project.urls]
repository = "https://github.com/frank1010111/pywaterflood"
documentation = "https://pywaterflood.readthedocs.io"
"Bug Tracker" = "https://github.com/frank1010111/pywaterflood/issues"

[build-system]
requires = ["maturin>=0.13"]
build-backend = "maturin"

[tool.maturin]
# Include arbitrary files in the sdist
sdist-include = []
compatibility = "manylinux2014"
# Bindings type
bindings = "pyo3"

[tool.coverage.run]
branch = true
source = ["pywaterflood"]
timid = true

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pyversion",
    "@jit",
    "@njit",
]

[tool.ruff]
select = [
  "E", "F", "W", # flake8
  "B", "B904",    # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
]
extend-ignore = [
  "PLR",    # Design related pylint codes
  "PT004",  # Use underscore for non-returning fixture (use usefixture instead)
]
line-length = 99
target-version = "py37"
src = ["pywaterflood"]
unfixable = [
  "T20",  # Removes print statements
  "F841", # Removes unused variables
]
exclude = []
flake8-unused-arguments.ignore-variadic-names = true
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"tests/**" = ["T20","D"] # testing don't need docs
"__init__.py" = ["F401"] # imported but unused

[tool.pytest.ini_options]
minversion = "6.0"
markers = [
    "slow: mark test as slow."
]


[tool.black]
line-length = 99

[tool.mypy]
ignore_missing_imports = true
